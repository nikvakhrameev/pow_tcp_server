// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DifficultyGetter is an autogenerated mock type for the DifficultyGetter type
type DifficultyGetter struct {
	mock.Mock
}

// GetDifficulty provides a mock function with given fields:
func (_m *DifficultyGetter) GetDifficulty() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewDifficultyGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewDifficultyGetter creates a new instance of DifficultyGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDifficultyGetter(t mockConstructorTestingTNewDifficultyGetter) *DifficultyGetter {
	mock := &DifficultyGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
